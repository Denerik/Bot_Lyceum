import discord
from discord.ext import commands
import logging
import requests
import datetime
import os
import json
import random

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
settings = {
    "Name": "–Ø–Ω–¥–µ–∫—Å_–õ–∏—Ü–µ–π_–ë–æ—Ç",
    "Token": "OTY2MzczMzg2OTMyNTg0NTQx.YmAzWQ.UxZ4XonaK-_WsKmcMMXpxbpVIgo",
    "prefix": "-"
}

logger = logging.getLogger('discord')
logger.setLevel(logging.DEBUG)
handler = logging.StreamHandler()
handler.setFormatter(logging.Formatter('%(asctime)s:%(levelname)s:%(name)s: %(message)s'))
logger.addHandler(handler)

intents = discord.Intents.default()
intents.members = True

if not os.path.exists('users.json'):
    with open('users.json', 'w') as file:
        file.write('{}')
        file.close()


# "–¢–µ–ª–æ" –ë–æ—Ç–∞
class Yl_Ds_Bot(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.answers = ['–ë–µ—Å—Å–ø–æ—Ä–Ω–æ', "–ü—Ä–µ–¥—Ä–µ—à–µ–Ω–æ", "–ù–∏–∫–∞–∫–∏—Ö —Å–æ–º–Ω–µ–Ω–∏–π", "–û–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ –¥–∞", "–ú–æ–∂–µ—à—å –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω –≤ —ç—Ç–æ–º",
                        "–ú–Ω–µ –∫–∞–∂–µ—Ç—Å—è - –¥–∞", "–í–µ—Ä–æ—è—Ç–Ω–µ–µ –≤—Å–µ–≥–æ", "–•–æ—Ä–æ—à–∏–µ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã", "–ó–Ω–∞–∫–∏ –≥–æ–≤–æ—Ä—è—Ç - –¥–∞", "–¥–∞",
                        "–ü–æ–∫–∞ –Ω–µ —è—Å–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞", "–°–ø—Ä–æ—Å–∏ –ø–æ–∑–∂–µ", "–õ—É—á—à–µ –Ω–µ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å",
                        "–°–µ–π—á–∞—Å –Ω–µ–ª—å–∑—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å", "–°–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∏—Ä—É–π—Å—è –∏ —Å–ø—Ä–æ—Å–∏ –æ–ø—è—Ç—å", "–î–∞–∂–µ –Ω–µ –¥—É–º–∞–π",
                        "–ú–æ–π –æ—Ç–≤–µ—Ç - –Ω–µ—Ç", "–ü–æ –º–æ–∏–º –¥–∞–Ω–Ω—ã–º ‚Äî –Ω–µ—Ç", "–ü–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã –Ω–µ –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–∏–µ", "–í–µ—Å—å–º–∞ —Å–æ–º–Ω–∏—Ç–µ–ª—å–Ω–æ"]
        self.month = ["–Ø–Ω–≤–∞—Ä—è", "–§–µ–≤—Ä–∞–ª—è", "–ú–∞—Ä—Ç–∞", "–ê–ø—Ä–µ–ª—è", "–ú–∞—è", "–ò—é–Ω—è", "–ò—é–ª—è", "–ê–≤–≥—É—Å—Ç–∞", "–°–µ–Ω—Ç—è–±—Ä—è", "–û–∫—Ç—è–±—Ä—è",
                      "–ù–æ—è–±—Ä—è", "–î–µ–∫–∞–±—Ä—è"]

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–∞–Ω–¥–∞—Ö
    @commands.command(name="info")
    async def info(self, ctx):
        embed = discord.Embed(title='–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:',
                              description='–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω—É—é —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–∞–∂–¥–æ–π –∫–æ–º–∞–Ω–¥–µ,'
                                          ' –≤—ã–ø–æ–ª–Ω–∏–≤ –µ—ë —Å -info –ø–µ—Ä–µ–¥'
                                          ' –∫–æ–º–∞–Ω–¥–æ–π', colour=discord.Colour.purple())
        info = """`-info`"""
        razvlech = """`-coin` `ball8` `cat` `dog`"""
        moderation = """`-ban` `-kick`, '-time'"""
        embed.add_field(name="üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", value=info, inline=False)
        embed.add_field(name="üòÑ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", value=razvlech, inline=False)
        embed.add_field(name="üîß –£—Ç–∏–ª–∏—Ç—ã", value=moderation, inline=False)
        embed.set_thumbnail(url="https://i.imgur.com/cLpXGIg.jpg")

        await ctx.send(embed=embed)

    # –†–∞–Ω–¥–æ–º–Ω–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞ –∫–æ—Ç–∞
    @commands.command(name="cat")
    async def cat(self, ctx):
        if ctx.author == self.bot.user:
            return
        request = requests.get('https://api.thecatapi.com/v1/images/search').json()
        await ctx.send(request[0]['url'])

    # –†–∞–Ω–¥–æ–º–Ω–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞ —Å–æ–±–∞–∫–∏
    @commands.command(name="dog")
    async def dog(self, ctx):
        if ctx.author == self.bot.user:
            return
        request = requests.get('https://dog.ceo/api/breeds/image/random').json()
        await ctx.send(request["message"])

    # –®–∞—Ä —Å—É–¥—å–±—ã
    @commands.command(name="ball8")
    async def ball8(self, ctx, *question):
        quest = ' '.join(question)
        embed = discord.Embed(description=quest, colour=discord.Colour.purple())
        if ctx.author == self.bot.user:
            return
        if not quest:
            embed.add_field(name='–û—à–∏–±–∫–∞:', value=f'–ù–∞–ø–∏—à–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–æ–ø—Ä–æ—Å')
        else:
            embed.add_field(name='–û—Ç–≤–µ—Ç:', value=random.choice(self.answers))
        await ctx.send(embed=embed)

    # –ú–æ–Ω–µ—Ç–∫–∞
    @commands.command(name="coin")
    async def coin(self, ctx):
        if ctx.author == self.bot.user:
            return
        embed = discord.Embed(title='–û—Ç–≤–µ—Ç:', description=random.choice(["–û—Ä—ë–ª", "–†–µ—à–∫–∞"]),
                              colour=discord.Colour.purple())
        await ctx.send(embed=embed)

    # –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è
    @commands.command(name='time')
    async def time(self, ctx):
        if ctx.author == self.bot.user:
            return
        dateandtime = str(datetime.datetime.now()).split()
        date = dateandtime[0].split('-')
        time = dateandtime[1].split(':')
        total = f'{date[2]} {self.month[int(date[1]) - 1]} {date[0]}–≥     {time[0]}:{time[1]}'
        embed = discord.Embed(title='–î–∞—Ç–∞:', description=total, colour=discord.Colour.purple())
        await ctx.send(embed=embed)

    # –ë–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    @commands.command(name="ban")
    async def ban(self, ctx, user: discord.Member):
        await user.ban()
        retStr = f"""```fix\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω```"""
        embed = discord.Embed(title='–û—Ç—á—ë—Ç', colour=discord.Colour.purple())
        embed.add_field(name='–ë–∞–Ω', value=retStr)
        await ctx.send(embed=embed)

    # –ö–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    @commands.command(name="kick")
    async def kick(self, ctx, user: discord.Member):
        retStr = f"""```–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –±—ã–ª –∫–∏–∫–Ω—É—Ç```"""
        info = """`-—Ö–µ–ª–ø` `-–∏–Ω—Ñ–æ`"""
        embed = discord.Embed(title='–û—Ç—á—ë—Ç', description=retStr, colour=discord.Colour.purple())
        embed.add_field(name="üìã–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", value=info)
        await ctx.send(embed=embed)


bot = commands.Bot(command_prefix=settings["prefix"], intents=intents)


@bot.event
async def on_ready():
    for guild in bot.guilds:
        for member in guild.members:
            with open('users.json', 'r') as file:
                data = json.load(file)
                file.close()
            with open('users.json', 'w') as file:
                data[str(member.id)] = {
                    "Name": member.name,
                    "id": member.id,
                    "exp": 0,
                    "level": 1,
                    "need_exp": 15,
                    "warns": 0
                }
                json.dump(data, file, indent=4)
                file.close()


@bot.event
async def on_message(message):
    user = str(message.author.id)
    with open('users.json', 'r') as file:
        data = json.load(file)
        file.close()
    with open('users.json', 'w') as file:
        need_exp = data[user]['need_exp']
        exp = data[user]['exp']
        if exp >= need_exp:
            data[user]['level'] += 1
            data[user]['need_exp'] *= 2
            reward = f'–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –Ω–æ–≤—ã–π {data[user]["level"]} —É—Ä–æ–≤–µ–Ω—å!'
            embed = discord.Embed(title='–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!', description=reward, colour=discord.Colour.purple())
            await message.channel.send(embed=embed)
        data[user]['exp'] += 3
        json.dump(data, file, indent=4)
        file.close()
    await bot.process_commands(message)


bot.add_cog(Yl_Ds_Bot(bot))
bot.run(settings["Token"])
